/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package whatsapp2;

import javax.swing.UnsupportedLookAndFeelException;
import com.formdev.flatlaf.FlatDarkLaf;
import java.awt.BasicStroke;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Insets;
import java.awt.Polygon;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.geom.Area;
import java.awt.geom.RoundRectangle2D;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.border.AbstractBorder;
import javax.swing.plaf.basic.BasicTabbedPaneUI;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import org.jsoup.Jsoup;
//import whatsapp2.MainScreen.initComponents.TextBubbleBorder;

/**
 *
 * @author space
 */

public class MainScreen extends JFrame{
    
    private static final long serialVersionUID = 1L;
    private static Socket socket;
    private OutputStream ou ;
    private Writer ouw;
    private BufferedWriter bfw;
    Thread msgListner;
    private boolean waiting_for_response = true;
    private boolean user_exist;
    
    /**
     * Creates new form MainScreen
     */
    boolean test = false;
    public MainScreen() {
        initComponents();
        
        jTabbedPane1.setUI(new BasicTabbedPaneUI() {  
            @Override  
            protected int calculateTabAreaHeight(int tab_placement, int run_count, int max_tab_height) {  
                return 0;  
            } 
        });
        
        jTabbedPane1.setEnabledAt(0, false);
        jTabbedPane1.setEnabledAt(1, false);
        
        int wid = (accountPane.getSize().width)/2;
        for(int tab = 0; tab < 2; tab++){
            String name= accountPane.getTitleAt(tab);
            accountPane.setTitleAt(tab,"<html><div style=\"text-align: center; width: "+ (wid - 66.5) +"px\">"+name+"</div></html>");
        }
        
        //roger.setBackground(new Color(0,0,50,255));
        //new TextBubbleBorder(new Color(0,0,0,0), 0, 12, 16, false)
        
//        JPanel a = new JPanel();
//        
//        a.setMinimumSize(new Dimension(100,5000));
//        a.setSize(new Dimension(100,5000));
//        a.setPreferredSize(new Dimension(673, 100));
//        a.setBackground(Color.red);
//        chatPanel.add(a);
        
    
        //chatScrollPanel.getVerticalScrollBar().setUnitIncrement(16);
    }
    
    public void addBubble(JPanel chatPanel, String text, boolean left, Color cor){
//        for (int i=0; i<dms.getTabCount(); i++) {
//            if (tabbedPane.getTitleAt(i))
//        }
        
//        final JPanel chatPanel = (JPanel) ((JScrollPane) dms.get).getComponent(0);
        
        JPanel bgPanel = new JPanel();
        bgPanel.setBackground(new Color(60,63,65));//60,63,65
        chatPanel.add(bgPanel);
        
        JPanel fgPanel = new JPanel();
        fgPanel.setBackground(cor);
        bgPanel.add(fgPanel);
        fgPanel.setBorder(new TextBubbleBorder(Color.GRAY, 1, 12, 10, left));
        fgPanel.setLayout(new FlowLayout(!left ? FlowLayout.LEADING : FlowLayout.TRAILING));
        
        JTextArea bubble = new JTextArea();
        bubble.setBackground(cor);
        bubble.setFont(new Font("Helvetica",Font.PLAIN,14));
        bubble.setForeground(Color.WHITE);
        fgPanel.add(bubble);
        
        bubble.setLineWrap(true);
        bubble.setEditable(false);
        bubble.setColumns(text.length() < 35 ? text.length() : 35);
        bubble.setText(text);
        
        bgPanel.setLayout(new FlowLayout(left ? FlowLayout.LEADING : FlowLayout.TRAILING));
        
        bubble.revalidate();
        fgPanel.revalidate();
        bgPanel.revalidate();
        chatPanel.revalidate();
        
        bubble.repaint();
        fgPanel.repaint();
        bgPanel.repaint();
        chatPanel.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void conectar(String name, boolean registrando) throws IOException{
        socket = new Socket("26.52.35.240", 5050);//"26.229.34.203"
        ou = socket.getOutputStream();
        ouw = new OutputStreamWriter(ou);
        bfw = new BufferedWriter(ouw);
        System.out.println("Nome: " + name);
        bfw.write(name + "#" + registrando +"\r\n");
        bfw.flush();
    }
    
    public void enviarMensagem(String msg) throws IOException{
        String plainName= Jsoup.parse(dms.getTitleAt(dms.getSelectedIndex())).text();
        msg = plainName +"<lili@hotmail.com>" + msg;
        System.out.println(msg);
        bfw.write(msg+"\r\n");
        bfw.flush();
    }
    
    public void closeConnection() throws IOException{
        bfw.write("CLOSE_SERVER\r\n");
        bfw.flush();
        bfw.close();
        ouw.close();
        ou.close();
        socket.close();
        msgListner.interrupt();
        //msgListner.interrupt();
    }
    
    class MsgListner implements Runnable {
        @Override
        public void run() {
            try {
                InputStream in = socket.getInputStream();
                InputStreamReader inr = new InputStreamReader(in);
                BufferedReader bfr = new BufferedReader(inr);
                String msg = "";

                rogerio : while(!"Sair".equalsIgnoreCase(msg)) {
                    if(bfr.ready()){
                        msg = bfr.readLine();
                        System.out.println("SERVER_MSG: " + msg);
                        
                        switch (msg){
                            case "SUCCESSFULLY_LOGGED" :
                                jTabbedPane1.setSelectedIndex(0);
                                break;
                            

                            case "USUARIO_JA_REGISTRADO":
                                JOptionPane.showMessageDialog(null, "USUÁRIO JÁ REGISTRADO");
                                closeConnection();
                                break rogerio;
                            
                            case "USUARIO_NAO_ENCONTRADO" :
                                JOptionPane.showMessageDialog(null, "USUÁRIO NÃO ENCONTRADO");
                                closeConnection();                          
                                break rogerio;
                            
                            case "USER_EXISTS" :
                                waiting_for_response = false;
                                user_exist = true;
                                break;
                            
                            case "USER_DONT_EXISTS" :
                                System.out.println(waiting_for_response);
                                waiting_for_response = false;
                                System.out.println(waiting_for_response);
                                user_exist = false;
                                break;
                            
                            case "Sair" :
                                closeConnection();
                                break rogerio;
                                
                            
                            case "MESSAGE_NOT_SENT" :
                                for (int i=0; i<dms.getTabCount(); i++) {
                                    if(Jsoup.parse(dms.getTitleAt(i)).text().equals(msg.split("<lili@hotmail.com>")[0])){
                                        JPanel chatPanel = (JPanel)((JScrollPane) dms.getComponentAt(i)).getViewport().getView();
                                        addBubble(chatPanel, "Was not possible to send the message", false, new Color(245, 66, 66));
                                        break;
                                    }
                                }
                                break;
                            
                            default :
                                if (!msg.isEmpty()){
                                    addDM(msg.split("<lili@hotmail.com>")[0]);
                                    for (int i=0; i<dms.getTabCount(); i++) {
                                        if(Jsoup.parse(dms.getTitleAt(i)).text().equals(msg.split("<lili@hotmail.com>")[0])){
                                            JPanel chatPanel = (JPanel)((JScrollPane) dms.getComponentAt(i)).getViewport().getView();
                                            String content = msg.split("<lili@hotmail.com>")[1];
                                            if (content.equals("Was not possible to send the message")){
                                                addBubble(chatPanel, content, false, new Color(245, 66, 66));
                                            }else addBubble(chatPanel, content, true, Color.gray);
                                            break;
                                        }
                                    }
                                }
                            
                                
                            
                        }
                    }
                    
                    
                }
            } catch (IOException ex){
                Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
            loginBtn.setEnabled(true);
            singUpBtn.setEnabled(true);
        }
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        addFriendBtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        msgTextArea = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        dms = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        accountPane = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lNameField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        loginBtn = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        rNameField = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        singUpBtn = new javax.swing.JButton();
        jPasswordField2 = new javax.swing.JPasswordField();
        jPasswordField3 = new javax.swing.JPasswordField();
        jPanel6 = new javax.swing.JPanel();
        img = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Whatsapp 2");
        setIconImage((new javax.swing.ImageIcon("src\\res\\WhatsApp.png")).getImage());
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        addFriendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFriendBtnActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Add friend");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(addFriendBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addFriendBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/WhatsApp logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addGap(0, 2, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9)
        );

        msgTextArea.setColumns(20);
        msgTextArea.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        msgTextArea.setLineWrap(true);
        msgTextArea.setRows(5);
        jScrollPane2.setViewportView(msgTextArea);

        jButton1.setText("SEND");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(9, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dms.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        dms.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(dms))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dms, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jTabbedPane1.addTab("tab1", jPanel1);

        accountPane.setBackground(new java.awt.Color(32, 33, 35));
        accountPane.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        accountPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                accountPaneStateChanged(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(32, 33, 35));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(57, 113, 177));
        jLabel1.setText("Name");

        lNameField.setBackground(new java.awt.Color(32, 33, 35));
        lNameField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lNameField.setBorder(null);

        jSeparator1.setForeground(new java.awt.Color(204, 204, 204));

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(57, 113, 177));
        jLabel2.setText("Password");

        jSeparator2.setForeground(new java.awt.Color(204, 204, 204));

        jLabel3.setFont(new java.awt.Font("Eras Light ITC", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(57, 113, 177));
        jLabel3.setText("Login");

        loginBtn.setBackground(new java.awt.Color(57, 113, 177));
        loginBtn.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        loginBtn.setForeground(new java.awt.Color(255, 255, 255));
        loginBtn.setText("Sing In");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        jPasswordField1.setBackground(new java.awt.Color(32, 33, 35));
        jPasswordField1.setBorder(null);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jSeparator1)
                            .addComponent(lNameField)
                            .addComponent(jSeparator2)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE))
                        .addGap(47, 47, 47))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(150, 150, 150))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel3)
                .addGap(48, 48, 48)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 142, Short.MAX_VALUE)
                .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );

        accountPane.addTab("Sing In", jPanel3);

        jPanel4.setBackground(new java.awt.Color(32, 33, 35));

        jLabel6.setFont(new java.awt.Font("Eras Light ITC", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(57, 113, 177));
        jLabel6.setText("Sing Up");

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(57, 113, 177));
        jLabel4.setText("Name");

        rNameField.setBackground(new java.awt.Color(32, 33, 35));
        rNameField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rNameField.setBorder(null);

        jSeparator3.setForeground(new java.awt.Color(204, 204, 204));

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(57, 113, 177));
        jLabel5.setText("Password");

        jSeparator4.setForeground(new java.awt.Color(204, 204, 204));

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(57, 113, 177));
        jLabel7.setText("Confirm Password");

        jSeparator5.setForeground(new java.awt.Color(204, 204, 204));

        singUpBtn.setBackground(new java.awt.Color(57, 113, 177));
        singUpBtn.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        singUpBtn.setForeground(new java.awt.Color(255, 255, 255));
        singUpBtn.setText("Sing Up");
        singUpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singUpBtnActionPerformed(evt);
            }
        });

        jPasswordField2.setBackground(new java.awt.Color(32, 33, 35));
        jPasswordField2.setBorder(null);

        jPasswordField3.setBackground(new java.awt.Color(32, 33, 35));
        jPasswordField3.setBorder(null);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(143, 143, 143))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(singUpBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(103, 103, 103))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jSeparator3)
                            .addComponent(rNameField)
                            .addComponent(jSeparator4)
                            .addComponent(jLabel7)
                            .addComponent(jSeparator5, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                            .addComponent(jPasswordField2)
                            .addComponent(jPasswordField3))
                        .addGap(45, 45, 45))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordField3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addComponent(singUpBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );

        accountPane.addTab("Sing Up", jPanel4);

        jPanel6.setLayout(null);

        img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/Whatsapp2_2.png"))); // NOI18N
        jPanel6.add(img);
        img.setBounds(-190, 0, 840, 544);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(accountPane, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(accountPane)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab2", jPanel2);

        jTabbedPane1.setSelectedIndex(1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Login");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void accountPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_accountPaneStateChanged
        switch(accountPane.getSelectedIndex()){
            case 0 : img.setIcon(new ImageIcon("src\\res\\Whatsapp2_2.png"));
                    break;
            case 1 : img.setIcon(new ImageIcon("src\\res\\Whatsapp2.png"));
                    break;
        }
    }//GEN-LAST:event_accountPaneStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(!msgTextArea.getText().isEmpty() && dms.getSelectedIndex() > -1){
            System.out.println(dms.getSelectedIndex());
            final JPanel chatPanel = (JPanel)((JScrollPane) dms.getSelectedComponent()).getViewport().getView();
            try{
                enviarMensagem(msgTextArea.getText());
                addBubble(chatPanel, msgTextArea.getText(), false, Color.gray);
                msgTextArea.setText("");
            }catch(IOException e){
                addBubble(chatPanel, "Was not possible to send the message", false, new Color(245, 66, 66));
            }
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void addDM(String name){
        
        String rem = "<html><div style=\"text-align: center; width: 120px\">" + name + "</div></html>";
        for (int i=0; i<dms.getTabCount(); i++) {
            String plainName = Jsoup.parse(dms.getTitleAt(i)).text();
            if(plainName.equals(name)){
                return;
            }
        }          
        
        JScrollPane chatScrollPanel = new javax.swing.JScrollPane();
        chatScrollPanel.getVerticalScrollBar().setUnitIncrement(16);
        chatScrollPanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        
        JPanel chatPanel = new javax.swing.JPanel();
        chatPanel.setLayout(new javax.swing.BoxLayout(chatPanel, javax.swing.BoxLayout.Y_AXIS));
        
        chatScrollPanel.setViewportView(chatPanel);
        dms.addTab("<html><div style=\"text-align: center; width: "+ 120 +"px\">"+name+"</div></html>", chatScrollPanel);
    }
    
    private void addFriendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFriendBtnActionPerformed
        String name = JOptionPane.showInputDialog("Enter your friend's username");  
        if(name != null && !name.isEmpty()){
            try {
                bfw.write(name+"<lili@hotmail.com>USER_EXISTS?"+"\r\n");
                bfw.flush();
            } catch (IOException ex) {
                Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
            }

            while (waiting_for_response) {
                try {
                    Thread.sleep(6);
                } catch (InterruptedException ex) {
                    Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            waiting_for_response = true;
            if (user_exist) {
                addDM(name);
            }
            return;
        }
        JOptionPane.showMessageDialog(null, "This user doesn't exist");
    }//GEN-LAST:event_addFriendBtnActionPerformed

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        loginBtn.setEnabled(false);
        String name = this.lNameField.getText();
        if (name.equals("")){
            JOptionPane.showMessageDialog(null, "Coloque um nome");
            return;
        }
        System.out.println("BEFORE: " + Thread.activeCount());
        try {
            this.conectar(name, true);
            msgListner = new Thread(new MsgListner());
            msgListner.start();
            //this.escutar();
        } catch (IOException ex) {
            Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("AFTER: " + Thread.activeCount());
    }//GEN-LAST:event_loginBtnActionPerformed

    private void singUpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singUpBtnActionPerformed
        singUpBtn.setEnabled(false);
        String name = this.rNameField.getText();
        if (name.equals("")){
            JOptionPane.showMessageDialog(null, "Coloque um nome");
            return;
        }
        try {
            if (msgListner != null && msgListner.isAlive())
                msgListner.interrupt();
            this.conectar(name, false);
            msgListner = new Thread(new MsgListner());
            msgListner.start();
            //this.escutar();
        } catch (IOException ex) {
            Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_singUpBtnActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            closeConnection();
        } catch (Exception ex) {
            
        }
    }//GEN-LAST:event_formWindowClosing


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.setLookAndFeel( new FlatDarkLaf() );
        } catch( UnsupportedLookAndFeelException ex ) {
            System.err.println( "Failed to initialize LaF" );
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane accountPane;
    private javax.swing.JButton addFriendBtn;
    private javax.swing.JTabbedPane dms;
    private javax.swing.JLabel img;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JPasswordField jPasswordField3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField lNameField;
    private javax.swing.JButton loginBtn;
    private javax.swing.JTextArea msgTextArea;
    private javax.swing.JTextField rNameField;
    private javax.swing.JButton singUpBtn;
    // End of variables declaration//GEN-END:variables

}

class TextBubbleBorder extends AbstractBorder {

    private Color color;
    private int thickness = 4;
    private int radii = 8;
    private int pointerSize = 7;
    private Insets insets = null;
    private BasicStroke stroke = null;
    private int strokePad;
    private int pointerPad = 4;
    private boolean left = true;
    RenderingHints hints;

    TextBubbleBorder(
            Color color) {
        this(color, 4, 8, 7);
    }

    TextBubbleBorder(
            Color color, int thickness, int radii, int pointerSize) {
        this.thickness = thickness;
        this.radii = radii;
        this.pointerSize = pointerSize;
        this.color = color;

        stroke = new BasicStroke(thickness);
        strokePad = thickness / 2;

        hints = new RenderingHints(
                RenderingHints.KEY_ANTIALIASING,
                RenderingHints.VALUE_ANTIALIAS_ON);

        int pad = radii + strokePad;
        int bottomPad = pad + pointerSize + strokePad;
        insets = new Insets(pad, pad, bottomPad, pad);
    }

    TextBubbleBorder(
            Color color, int thickness, int radii, int pointerSize, boolean left) {
        this(color, thickness, radii, pointerSize);
        this.left = left;
    }

    @Override
    public Insets getBorderInsets(Component c) {
        return insets;
    }

    @Override
    public Insets getBorderInsets(Component c, Insets insets) {
        return getBorderInsets(c);
    }

    @Override
    public void paintBorder(
            Component c,
            Graphics g,
            int x, int y,
            int width, int height) {

        Graphics2D g2 = (Graphics2D) g;

        //int bottomLineY = height - thickness - pointerSize;

        RoundRectangle2D.Double bubble = null;
        if(left){
            bubble = new RoundRectangle2D.Double(
                pointerSize + strokePad,
                strokePad,
                width - thickness - pointerSize,
                height,
                radii,
                radii);
        }else{
            bubble = new RoundRectangle2D.Double(
                pointerSize - strokePad,
                0 + strokePad,
                width - thickness - pointerSize*2,
                height,
                radii,
                radii);
        }
        

        Polygon pointer = new Polygon();

        if (left) {
            // right point
            pointer.addPoint(0, 0);
            // left point
            pointer.addPoint(radii + pointerSize, 0);
            // bottom point
            pointer.addPoint(pointerSize, radii);
        } else {
            // right point
            pointer.addPoint(width , 0);
            // left point
            pointer.addPoint(width - pointerSize - radii, 0);
            // bottom point
            pointer.addPoint(width - pointerSize, radii);
        }

        Area area = new Area(bubble);
        area.add(new Area(pointer));

        g2.setRenderingHints(hints);

        // Paint the BG color of the parent, everywhere outside the clip
        // of the text bubble.
        Component parent  = c.getParent();
        if (parent!=null) {
            Color bg = parent.getBackground();
            Rectangle rect = new Rectangle(0,0,width, height);
            Area borderRegion = new Area(rect);
            borderRegion.subtract(area);
            g2.setClip(borderRegion);
            g2.setColor(bg);
            g2.fillRect(0, 0, width, height);
            g2.setClip(null);
        }

        g2.setColor(color);
        g2.setStroke(stroke);
        g2.draw(area);
    }
}
